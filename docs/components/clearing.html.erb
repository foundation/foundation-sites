<% @side_nav = "js" %>

<div class="row">
  <div class="large-9 push-3 columns">

    <% @page_title = "Clearing" %>
    <div class="row">
      <div class="large-12 columns">
        <h2><%= @page_title %></h2>
        <h4 class="subheader">Since Orbit isn't intended for variable-height content, we decided it would be a great idea to create a plugin that would help in that regard. Clearing makes it easy to create responsive lightboxes with any size image.</h4>
      </div>
    </div>

    <div class="row">
      <div class="large-12 columns">

        <ul class="clearing-thumbs" data-clearing>
          <li><a class="th" href="../img/demos/demo1.jpg"><img data-caption="Nulla vitae elit libero, a pharetra augue. Cras mattis consectetur purus sit amet fermentum." src="../img/demos/demo1-th.jpg"></a></li>
          <li><a class="th" href="../img/demos/demo2.jpg"><img src="../img/demos/demo2-th.jpg"></a></li>
          <li><a class="th" href="../img/demos/demo3.jpg"><img data-caption="Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus." src="../img/demos/demo3-th.jpg"></a></li>
          <li><a class="th" href="../img/demos/demo4.jpg"><img src="../img/demos/demo4-th.jpg"></a></li>
          <li><a class="th" href="../img/demos/demo5.jpg"><img data-caption="Integer posuere erat a ante venenatis dapibus posuere velit aliquet." src="../img/demos/demo5-th.jpg"></a></li>
        </ul>

      </div>
    </div>

    <div class="row">
      <div class="large-12 columns">
        <hr>
      </div>
    </div>

    <div class="row">
      <div class="large-12 columns">

        <h3>Build Your Clearing Lightbox</h3>
        <p>There is only one way to build a Clearing lightbox, using our predefined class and data-attribute structure. We've made it really easy: gather some images, decide on their order, and put them into a <code>&lt;ul class="clearing-thumbs"&gt;</code> of your choice. In order to get Clearing to build itself properly, you'll need to have Javascript properly included. We outline <a href="#js">Clearing JS</a> a bit further down the page.</p>

        <p>Once you get your JS hooked up, you'll need to add <code>data-clearing</code> to your list container. Here's an example of the most basic markup needed:</p>

<%= code_example '
<ul class="clearing-thumbs" data-clearing>
  <li><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
  <li><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
  <li><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
</ul>', :html %>

        <h5>Styling the List</h5>
        <p>We're using the <code>.th</code> class from Foundation to style the thumbnails in the Clearing example at the top of the page. You can also use <code>@include thumb;</code> in SCSS to use those same styles.</p></aside>

        <hr>

        <h4>Start From a Featured Image</h4>
        <p>Sometimes you don't want to show a gallery full of images on your site, but you want to open the gallery from a single image. By including all of your images in a <code>.clearing-feature</code> list and using <code>.clearing-featured-img</code> on the <code>&lt;li&gt;</code> of your choice, you'll be able to hide the rest of the images in the on-page gallery. If you want to show more than once, try using our <code>.hide</code> class to set the ones you don't want to <code>display: none;</code>.</p>

<%= code_example '
<ul class="clearing-thumbs clearing-feature" data-clearing>
  <li><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
  <li class="clearing-featured-img"><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
  <li><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
</ul>', :html %>

        <div class="row">
          <div class="large-12 columns">
            <ul class="clearing-thumbs clearing-feature" data-clearing>
              <li><a class="th" href="../img/demos/demo1.jpg"><img src="../img/demos/demo1-th.jpg"></a></li>
              <li class="clearing-featured-img"><a class="th" href="../img/demos/demo2.jpg"><img src="../img/demos/demo2-th.jpg"></a></li>
              <li><a class="th" href="../img/demos/demo3.jpg"><img src="../img/demos/demo3-th.jpg"></a></li>
            </ul>
          </div>
        </div>

        <hr>

        <h4>Including Captions</h4>
        <p>Another common use-case for Lightboxes is to include a caption per image. We've made this quick and easy by using data-attributes to hold the content. You'll just attach this attribute to the image it belongs to and voila!</code> Here's the code example:</p>

        <p><strong>Note:</strong> You can now use HTML inside the data-caption attribute.</p>
<%= code_example '
<ul class="clearing-thumbs" data-clearing>
  <li><a href="path/to/your/img"><img data-caption="caption here..." src="path/to/your/img-th"></a></li>
  <li><a href="path/to/your/img"><img data-caption="caption 2 here..." src="path/to/your/img-th"></a></li>
  <li><a href="path/to/your/img"><img data-caption="caption 3 here..." src="path/to/your/img-th"></a></li>
</ul>', :html %>

        <div class="row">
          <div class="large-12 columns">
            <ul class="clearing-thumbs" data-clearing>
              <li><a class="th" href="../img/demos/demo1.jpg"><img data-caption="caption here..." src="../img/demos/demo1-th.jpg"></a></li>
              <li><a class="th" href="../img/demos/demo2.jpg"><img data-caption="caption 2 here..." src="../img/demos/demo2-th.jpg"></a></li>
              <li><a class="th" href="../img/demos/demo3.jpg"><img data-caption="caption 3 here..." src="../img/demos/demo3-th.jpg"></a></li>
            </ul>
          </div>
        </div>

        <hr>

        <h3>Available SCSS Variables</h3>
        <p>We opted not to create mixins for this plugin because it relies on classes in the JS to work. These variables should give you the control you need to change styles as you see fit:</p>
<%= code_example '
$include-html-clearing-classes: $include-html-classes;

/* We use these to set the background colors for parts of Clearing. */
$clearing-bg: #111;
$clearing-caption-bg: $clearing-bg;
$clearing-carousel-bg: #111;
$clearing-img-bg: $clearing-bg;

/* We use these to style the close button */
$clearing-close-color: #fff;
$clearing-close-size: 40px;

/* We use these to style the arrows */
$clearing-arrow-size: 16px;
$clearing-arrow-color: $clearing-close-color;

/* We use these to style captions */
$clearing-caption-font-color: #fff;
$clearing-caption-padding: 10px 30px;

/* We use these to make the image and carousel height and style */
$clearing-active-img-height: 75%;
$clearing-carousel-height: 150px;
$clearing-carousel-thumb-width: 175px;
$clearing-carousel-thumb-active-border: 4px solid rgb(255,255,255);
', :css %>

        <hr>

        <h3>Using the JavaScript</h3>
        <div class="panel">
          Before you can use Clearing you'll want to verify that both jQuery (or Zepto) and <code>foundation.js</code> are available on your page. You can refer to the <a href="../javascript.html">javascript documentation</a> on setting that up.
        </div>

        <p>Just add <code>foundation.clearing.js</code> AFTER the <code>foundation.js</code> file. Your markup should look something like this:</p>

        <%= code_example '
<body>

  ...

  <script>
      document.write(\'<script src=/js/vendor/\'
        + (\'__proto__\' in {} ? \'zepto\' : \'jquery\')
        + \'.js><\/script>\');
    </script>

  <script src="js/foundation/foundation.js"></script>
  <script src="js/foundation/foundation.clearing.js"></script>
  <!-- Other JS plugins can be included here -->

  <script>
    $(document).foundation();
  </script>

</body>
        ', :html %>

        <p>Required Foundation Library: <code>foundation.clearing.js</code></p>

        <h5>Optional JavaScript Configuration</h5>

        <p>As of Clearing 4.1.2, you can now pass in options to <code>data-options</code> when the clearing is initialized on the page.</p>

<%= code_example '
<ul class="clearing-thumbs" data-clearing data-options={
    // specify the classes or IDs which will close clearing when clicked.
    close_selectors : \'.clearing-close, myCloseButton\'}>
', :html %>

<h3>Events</h3>
<p>You can bind to the following events in your code.</p>

<table style="width:100%;">
  <thead>
    <tr>
      <th>Event</th>
      <th>Params</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>open.clearing.fndtn</td>
      <td>event, thumb-id</td>
      <td>Fires before a thumbnail is expanded. The <code>thumb-id</code> parameter contains the thumbnail id.</td>
    </tr>
    <tr>
      <td>opened.clearing.fndtn</td>
      <td>event</td>
      <td>Fires after an expanded image has opened.</td>
    </tr>
    <tr>
      <td>close.clearing.fndtn</td>
      <td>event</td>
      <td>Fires before a large image is closed</td>
    </tr>
    <tr>
      <td>closed.clearing.fndtn</td>
      <td>event</td>
      <td>Fires after a large image is closed</td>
    </tr>
    <tr>
    	<td>change.clearing.fndtn</td>
    	<td>event</td>
    	<td>Fires when the large image is changed using the arrows at the side</td>
    </tr>
  </tbody>
</table>

<h5>Example</h5>
<p>Here is an example of binding to the open event.</p>

<%= code_example '
<div id="myClearingEx">
  <ul class="clearing-thumbs" data-clearing>
    <li><a href="path/to/your/img"><img src="path/to/your/img-th"></a></li>
    <li><a href="path/to/your/img"><img  src="path/to/your/img-th"></a></li>
    <li><a href="path/to/your/img"><img  src="path/to/your/img-th"></a></li>
  </ul>
</div>

<script>
$("div#myClearingEx").on("open.clearing.fndtn", function(event, id) {
  console.info("About to open thumbnail with id " + id);
});
</script>
', :html %>
      </div>
    </div>

  </div>

  <div class="large-3 pull-9 columns">
    <%= render "_sidebar-components.html.erb" %>
  </div>

</div>