<% @side_nav = "js" %>

<div class="row">
  <div class="large-9 push-3 columns">

    <% @page_title = "Tooltips" %>
    <div class="row">
      <div class="large-12 columns">
        <h2><%= @page_title %></h2>
        <h4 class="subheader">Tooltips are a quick way to provide <span data-tooltip class="has-tip" title="Tooltips are awesome, you should totally use them!">extended information</span> on a term or action on a page.</h4>

        <hr>
      </div>
    </div>

    <div class="row">
      <div class="large-12 columns">
        <a name="tooltips"></a>
        <h4>Building With HTML Classes</h4>
        <p>Tooltips work cross browser and cross platform and are easily added to a page with a simple markup and class structure. You can apply the <strong>has-tip</strong> class to any element.</p>

        <p>By default, the tooltip takes the width of the element that it is applied to, but you can override this behavior by applying a <strong>data-width</strong> attribute to the target element. The tooltip takes on the content of the targets <strong>title</strong> attribute.</p>

        <p>The tooltips can be positioned on the <span data-tooltip class="has-tip" data-width="210" title="I'm on bottom and the default position.">"tip-bottom"</span>, which is the default position, <span data-tooltip class="has-tip tip-top" data-width="210" title="I'm on the top!">"tip-top" (hehe)</span>, <span data-tooltip="left" class="has-tip tip-left" data-width="90" title="I'm on the left!">"tip-left"</span>, or <span data-tooltip="right" class="has-tip tip-right" data-width="120" title="I'm on the right!">"tip-right"</span> of the target element by adding the appropriate class to them. You can even add your own custom class to style each tip differently. On a small device, the tooltips are full width and bottom aligned.</p>

<%= code_example '
<span data-tooltip class="has-tip" title="Tooltips are awesome, you should totally use them!">extended information</span>
', :html %>

        <p>Available class options:</p>
        <ul class="disc">
          <li><code>tip-top</code>: Align the tip above the element you attach it to.</li>
          <li><code>tip-bottom</code>: Align the tip below the element you attach it to.</li>
          <li><code>tip-left</code>: Align the tip to the left the element you attach it to.</li>
          <li><code>tip-right</code>: Align the tip to the right the element you attach it to.</li>
          <li><code>tip-center</code>: Align a bottom or top tip to the center of the element you attach it to.</li>
        </ul>

        <h4>Disable for Touch Devices</h4>
        <p>If you don't want tooltips to interfere with a touch event, you can disable them for those devices. To do this, you'll just need to add a data-option to your tooltip, like so:</p>

<%= code_example '
<span data-tooltip data-options="disable-for-touch:true" class="has-tip" title="Tooltips are awesome, you should totally use them!">extended information</span>
', :html %>

        <hr>

        <h4>Available SCSS Variables</h4>
<%= code_example '
$include-html-tooltip-classes: $include-html-classes;

$has-tip-border-bottom: dotted 1px #ccc;
$has-tip-font-weight: bold;
$has-tip-font-color: #333;
$has-tip-border-bottom-hover: dotted 1px darken($primary-color, 20%);
$has-tip-font-color-hover: $primary-color;
$has-tip-cursor-type: help;

$tooltip-padding: em-calc(8);
$tooltip-bg: #000;
$tooltip-font-size: em-calc(15);
$tooltip-font-weight: bold;
$tooltip-font-color: #fff;
$tooltip-line-height: 1.3;
$tooltip-close-font-size: em-calc(10);
$tooltip-close-font-weight: normal;
$tooltip-close-font-color: #888;
$tooltip-font-size-sml: em-calc(14);
$tooltip-radius: $global-radius;
$tooltip-pip-size: 5px;
', :css %>

        <hr>

        <h3>Using the Javascript</h3>
        <div class="panel">
          Before you can use tooltips you'll want to verify that both jQuery (or Zepto) and <code>foundation.js</code> are available on your page. You can refer to the <a href="../javascript.html">javascript documentation</a> on setting that up.
        </div>

        <p>Just add <code>foundation.tooltips.js</code> AFTER the <code>foundation.js</code> file. Your markup should look something like this:</p>

        <%= code_example '
<body>

  ...

  <script>
      document.write(\'<script src=/js/vendor/\'
        + (\'__proto__\' in {} ? \'zepto\' : \'jquery\')
        + \'.js><\/script>\');
    </script>

  <script src="js/foundation/foundation.js"></script>
  <script src="js/foundation/foundation.tooltips.js"></script>
  <!-- Other JS plugins can be included here -->

  <script>
    $(document).foundation();
  </script>

</body>
        ', :html %>
        <p>Required Foundation Library: <code>foundation.tooltips.js</code></p>

        <p>Then, you'll need to add a data-attribute to make the JS work properly on that element. That looks like:</p>

<%= code_example '
<span data-tooltip class="has-tip" title="Tooltips are awesome, you should totally use them!">...</span>
', :html %>

        <h5>Optional JavaScript Configuration</h5>

        <p>Tooltips now support <code>data-options</code> configuration. You can use this functionality to disable tooltips selectively by defining <code>data-options="disable-for-touch: true"</code> on your tip target.</p>

    <%= code_example "
{
  selector : '.has-tip',
  additionalInheritableClasses : [],
  tooltipClass : '.tooltip',
  touchCloseText: 'tap to close',
  disable-for-touch: false,
  tipTemplate : function (selector, content) {
    return '<span data-selector=\"' + selector + '\" class=\"'
      + Foundation.libs.tooltips.settings.tooltipClass.substring(1)
      + '\">' + content + '<span class=\"nub\"></span></span>';
  }
}", :js %>

      </div>
    </div>
  </div>
  <div class="large-3 pull-9 columns">
    <%= render "_sidebar-components.html.erb" %>
  </div>
</div>
