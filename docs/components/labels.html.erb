<% @side_nav = "type" %>

<div class="row">
  <div class="large-9 push-3 columns">

    <% @page_title = "Labels" %>
    <div class="row">
      <div class="large-12 columns">
        <h2><%= @page_title %></h2>
        <h4 class="subheader">Labels are useful inline styles that can be dropped into body copy to call out certain sections or to attach metadata. Examples might be noting when something was updated or that something is new.</h4>

        <p>
          <span class="label">Regular Label</span><br>
          <span class="radius secondary label">Radius Secondary Label</span><br>
          <span class="round alert label">Round Alert Label</span><br>
          <span class="success label">Success Label</span><br>
        </p>

        <hr>
      </div>
    </div>

    <div class="row">
      <div class="large-12 columns">

        <h3>Build With Predefined HTML Classes</h3>
        <p>There are two ways to build labels in Foundation 4: with our predefined HTML classes or with our mixins. Building labels using our predefined classes is simple, you'll just need to write a <code>&lt;span class="label"&gt;</code> and apply the classes you want.</p>

<%= code_example '
<span class="label">Regular Label</span>
<span class="radius secondary label">Radius Secondary Label</span>
<span class="round alert label">Round Alert Label</span>
<span class="success label">Success Label</span>', :html %>

        <p>The class options:</p>
        <ul class="disc">
          <li>The color classes include: <code>.secondary, .alert</code> or <code>.success</code></li>
          <li>The radius classes include: <code>.radius</code> or <code>.round</code>.</li>
        </ul>

        <p>For these styles to come across, make sure you have the default Foundation CSS package or that you've selected labels from a custom package. These should be linked up following our default <a href="../index.html">HTML page structure</a>.</p>

        <hr>

        <h3>Build With Our Mixins</h3>
        <p>We've included SCSS mixins used to style labels. To use the mixin, you'll need to have the <a href="../sass.html">extension installed</a> or grab <a href="https://github.com/zurb/foundation/blob/master/scss/foundation/_variables.scss">_variables.scss</a>, <a href="https://github.com/zurb/foundation/blob/master/scss/foundation/components/_global.scss">_global.scss</a> and <a href="https://github.com/zurb/foundation/blob/master/scss/foundation/components/_labels.scss">_labels.scss</a> from Github and throw them into a Foundation folder in your project directory. From there, you can import the files at the top of your own SCSS stylesheet, like so:</p>

<%= code_example '
@import "foundation/variables";
@import "foundation/components/global";
@import "foundation/components/labels";
', :css %>

        <h5>Quick Mixin</h5>
        <p>You can build your labels using our global mixin by including it on your custom class or ID in your own stylesheet. The mixin contains options for changing the background color, which also controls the border and text color. You'll also have the ability to change the font-size and padding. The rest of the defaults can be modified using the available variables. The global mixin looks like this:</p>

<%= code_example '
/* Using the default styles */
.your-class-name { @include label; }', :css %>

    <p>There are also four options you can customize on the fly when writing this mixin. These control things like: padding, text size, background color and radius. Setting any of these options to false will negate those styles.</p>

<%= code_example '
/* Using the available options */
.your-class-name { @include label($padding,$text-size,$bg,$radius); }

/* Controls the padding, set to a string following top, right, bottom, left rules or change the variable */
$padding: $label-padding

/* Control your text-size per label */
$text-size: $label-font-size

/* Change the background color for your labels */
$bg: $primary-color

/* Control how much radius is put on the labels */
$radius: false
', :css %>

        <p class="custom-keystroke">Here's an example of a custom <span class="label-custom">label</span> style.</p>

        <h5>Default SCSS Variables</h5>

<%= code_example '
$include-html-label-classes: $include-html-classes;

/* We use these to style the labels */
$label-padding: em-calc(3 10 4);
$label-radius: $global-radius;

/* We use these to style the label text */
$label-font-sizing: em-calc(14);
$label-font-weight: bold;
$label-font-color: #333;
$label-font-color-alt: #fff;', :css %>

        <p><strong>Note:</strong> <code>em-calc();</code> is a function we wrote to convert <code>px</code> to <code>em</code>. It is included in <strong>_variables.scss</strong>.</p>

      </div>
    </div>

  </div>
  <div class="large-3 pull-9 columns">
    <%= render "_sidebar-components.html.erb" %>
  </div>
</div>