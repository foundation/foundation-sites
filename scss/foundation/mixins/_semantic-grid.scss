// @mixins
//
// For creating container, nested, and collapsed rows.
@mixin gridRow($behavior: false) {

  // use @include gridRow(nest); to include a nested row
  @if $behavior == nest {
    width: auto;
    margin-left: (-($columnGutter/2));
    margin-right: (-($columnGutter/2));
    margin-top: 0;
    margin-bottom: 0;
    max-width: none;
  }

  // use @include gridRow(collapse); to collapsed a container row margins
  @else if $behavior == collapse {
    width: 100%;
    margin: 0;
    max-width: $rowWidth;
  }

  // use @include gridRow(nest-collapse); to collapse outer margins on a nested row
  @else if $behavior == nest-collapse {
    width: auto;
    margin: 0;
    max-width: none;
  }
  
  // use @include gridRow(pad); to apply gutter padding to match mobile columns
  @else if $behavior == pad {
    width: 100%;
    margin: 0 auto;
    padding-left: $columnGutter / 2;
    padding-right: $columnGutter / 2;
    max-width: $rowWidth;
  }

  // use @include gridRow(); to use a container row
  @else {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    margin-top: 0;
    margin-bottom: 0;
    max-width: $rowWidth;
  }

  // Clearfix for all rows
  @include clearfix();

}


// For creating columns - @include these inside a media query to control small vs. large grid layouts
@mixin gridCol($columns:false, $lastCol:false, $center:false, $offset:false, $push:false, $pull:false, $collapse:false) {

  // Default positioning
  position: relative;

  // Gutter padding whenever a column isn't set to collapse
  @if $collapse == false {
    padding-left: $columnGutter / 2;
    padding-right: $columnGutter / 2;
  }

  // If a column number is given, calculate width
  @if $columns {
    width: gridCalc($columns, $totalColumns);
    float: left;

    // If last column, float naturally instead of to the right
    @if $lastCol { float: $defaultOpposite; }

    // If centered, get rid of float and add appropriate margins
    @else if $center {
      float: none;
      margin-left: auto;
      margin-right :0;
    }

    // If offset, calculate appropriate margins
    @else if $offset { margin-#{$defaultFloat}: gridCalc($offset, $totalColumns); }

    // if collapsed, get rid of gutter padding
    @else if $collapse { padding-left: 0; padding-right: 0; }

    // Source Ordering, adds left/right depending on which you use.
    @else if $push { #{$defaultFloat}: gridCalc($push, $totalColumns); #{$defaultOpposite}: auto; }
    @else if $pull { #{$defaultOpposite}: gridCalc($pull, $totalColumns); #{$defaultFloat}: auto; }

    // default float for columns
    @else { float: $defaultFloat; }
  }

  // Mobile first columns
  @else {
    float: none;
    width: 100%;
  }

}
